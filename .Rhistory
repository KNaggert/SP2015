ggplot(kin.dt[kin.dt$chr == "autosome", ], aes(kinship)) +
geom_density(aes(fill = pedigree), alpha = .5) +
scale_fill_manual(values = c("dodgerblue3", "firebrick1")) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_blank(),
axis.line = element_line(color = 'grey30'),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12, vjust = 1),
legend.text = element_text(size = 12))
#       legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf("~/Dropbox/ADSP/kinship/kin-autosome.pdf")
ggplot(kin.dt[kin.dt$chr == "autosome", ], aes(kinship)) +
geom_density(aes(color = pedigree), alpha = .5) +
scale_fill_manual(values = c("dodgerblue3", "firebrick1")) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_blank(),
axis.line = element_line(color = 'grey30'),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12, vjust = 1),
legend.text = element_text(size = 12),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf("~/Dropbox/ADSP/kinship/kin-autosome.pdf")
ggplot(kin.dt[kin.dt$chr == "autosome", ], aes(kinship)) +
geom_density(aes(fill = pedigree), alpha = .5) +
scale_fill_manual(values = c("dodgerblue3", "firebrick1")) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_blank(),
axis.line = element_line(color = 'grey30'),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12, vjust = 1),
legend.text = element_text(size = 12),
legend.title = element_blank())
dev.off()
library(WGCNA)
install.packages("WGCNA")
library(WGCNA)
install.packages("namespace")
library(WGCNA)
install.packages("impute")
library(WGCNA)
install.packages(c("matrixStats", "Hmisc", "splines", "foreach", "doParallel", "reshape", "fastcluster", "dynamicTreeCut", "survival")
source("http://bioconductor.org/biocLite.R")
biocLite(c("GO.db", "preprocessCore", "impute"))
library("Biobase", lib.loc="~/Library/R/3.1/library")
install.packages(c("matrixStats", "Hmisc", "splines", "foreach", "doParallel", "reshape", "fastcluster", "dynamicTreeCut", "survival")
source("http://bioconductor.org/biocLite.R")
biocLite(c("GO.db", "preprocessCore", "impute"))
source("http://bioconductor.org/biocLite.R")
biocLite(c("GO.db", "preprocessCore", "impute"))
install.packages(c("matrixStats", "Hmisc", "splines", "foreach", "doParallel", "reshape", "fastcluster", "dynamicTreeCut", "survival")
)
install.packages(c("matrixStats", "Hmisc", "splines", "foreach",
title: "myfile"
?seq
132 + 95 + 276 + 113
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
log10(0.05)
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
setwd("~/Dropbox/GitHub/Adsp")
save(kinship, file = "./data/kinship_new.rdt")
load("./data/kinship_new.rdt")
KS <- kinship$autosome
kin23 <- kinship$kin23
pheatmap(cor(kin23), display_number = T, treeheight_row = 0,
fontsize_number = 6)
library(pheatmap)
library(ggplot2)
pheatmap(cor(kin23), display_number = T, treeheight_row = 0,
fontsize_number = 6)
pdf("./PDF/kin-heatmap.pdf")
pheatmap(cor(kinship$kin23), display_number = T, treeheight_row = 0,
fontsize_number = 6)
dev.off()
pdf("./PDF/kin-heatmap.pdf", width = 5, height = 8)
pheatmap(cor(kinship$kin23), treeheight_row = 0, fontsize_number = 6)
dev.off()
pdf("./PDF/kin-heatmap.pdf", width = 6, height = 8)
pheatmap(cor(kinship$kin23), treeheight_row = 0, fontsize_number = 6)
dev.off()
pdf("./PDF/kin-heatmap.pdf", width = 8, height = 6)
pheatmap(cor(kinship$kin23), treeheight_col = 0, fontsize_number = 6)
dev.off()
pdf("./PDF/kin-heatmap.pdf", width = 10, height = 7)
pheatmap(cor(kinship$kin23), treeheight_col = 0, fontsize_number = 6)
dev.off()
?pheatmap
pdf("./PDF/kin-heatmap.pdf", width = 10, height = 7)
pheatmap(cor(kinship$kin23), treeheight_col = 0, treeheight_col = 20, fontsize_number = 6)
dev.off()
pdf("./PDF/kin-heatmap.pdf", width = 10, height = 7)
pheatmap(cor(kinship$kin23), treeheight_col = 0, treeheight_row = 20, fontsize_number = 6)
dev.off()
pdf("./PDF/kin-heatmap.pdf", width = 10, height = 7)
pheatmap(cor(kinship$kin23), treeheight_col = 0, treeheight_row = 1e2, fontsize_number = 6)
dev.off()
pdf("./PDF/kin-heatmap.pdf", width = 10, height = 7)
pheatmap(cor(kinship$kin23), treeheight_col = 0, treeheight_row = 2e2)
dev.off()
pdf("./PDF/kin-heatmap.pdf", width = 10, height = 6)
pheatmap(cor(kinship$kin23), treeheight_col = 0, treeheight_row = 2e2)
dev.off()
pdf("./PDF/kin-heatmap.pdf", width = 10, height = 6)
par(margin = c(5, 10, 4, 2))
pheatmap(cor(kinship$kin23), treeheight_col = 0, treeheight_row = 2e2)
dev.off()
pdf("./PDF/kin-heatmap.pdf", width = 10, height = 6)
par(margins = c(5, 10, 4, 2))
pheatmap(cor(kinship$kin23), treeheight_col = 0, treeheight_row = 2e2)
dev.off()
pdf("./PDF/kin-heatmap.pdf", width = 10, height = 6)
par(mar = c(5, 10, 4, 2))
pheatmap(cor(kinship$kin23), treeheight_col = 0, treeheight_row = 2e2)
dev.off()
pdf("./PDF/kin-heatmap.pdf", width = 10, height = 6)
par(mar = c(5, 4, 5, 2))
pheatmap(cor(kinship$kin23), treeheight_col = 0, treeheight_row = 2e2)
dev.off()
pdf("./PDF/kin-heatmap.pdf", width = 10, height = 6)
par(mar = c(10, 8, 8, 4))
pheatmap(cor(kinship$kin23), treeheight_col = 0, treeheight_row = 2e2)
dev.off()
names(kinship$kin23)
kinship$kin23["autosome"]
kinship$kin23[, "autosome"]
pedigree = c(rep("In", 1545), rep("Out", 164055))
gdt <- data.frame(kinship = kinship$kin23[, "autosome"], pedigree = pedigree)
pdf("./Pdf/kinship.pdf", width = 8, height = 4, family = "Helvetica")
ggplot(gdt, aes(kinship)) +
geom_density(aes(fill = pedigree), alpha = .5) +
scale_fill_manual(values = c("dodgerblue3", "firebrick1")) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_rect(size = 1, color = "grey30"),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12, vjust = 1),
legend.text = element_text(size = 12),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
ggplot(gdt, aes(kinship)) +
geom_density(aes(fill = pedigree), alpha = .5) +
scale_fill_manual(values = c("dodgerblue3", "firebrick1")) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_rect(size = 1, color = "grey30"),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12, vjust = 1))
ggplot(gdt, aes(kinship)) +
geom_density(aes(fill = pedigree), alpha = .5) +
scale_fill_manual(values = c("dodgerblue3", "firebrick1")) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_rect(size = 1, color = "grey30"),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12, vjust = 1),
legend.position = "none")
pdf("./Pdf/kinship.pdf", width = 8, height = 4, family = "Helvetica")
ggplot(gdt, aes(kinship)) +
geom_density(aes(fill = pedigree), alpha = .5) +
scale_fill_manual(values = c("dodgerblue3", "firebrick1")) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_rect(size = 1, color = "grey30"),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12, vjust = 1))
dev.off()
library(arm)
library(lme4)
library(ordinal)
library(emma)
library(QTLRel)
library(lmtest)
library(ggplot2)
rm(list = ls())
setwd("~/Dropbox/GitHub/Adsp")
load("data/mdata.rdt")
data0 <- mdata[, c("AD1", "AD2", "Sex", "Age", "APOE", "Family.ID")]
data0
load("data/genInitList_new.rdt")
grep("Apoe", names(fit0$par))
names(fit0$par)[585:586]
glm <- fit0$par[c("pAge", "pSex", "pApoe2")]
glm
glm <- fit0$par[c("pAge", "pSex", "pApoe2", "pApoe4")]
names(glm) <- gsub("^p", "", names(glm))
glm
glm <- data.frame(feature = factor(names(glm), levels = names(glm)), effect = glm)
glm
pdf("Pdf/covar.pdf", width = 8, height = 4)
ggplot(glm, aes(x = feature, y = effect, label = feature)) +
geom_point(size = 5, color = "firebrick1") +
geom_text(size = 5, vjust = 2) + geom_hline(y = 0, linetype = 2) +
theme_bw() + xlab("") + ylab("Effect") + ylim(-0.5, 1.0) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 12, face = "bold", vjust = 1))
dev.off()
pdf("Pdf/covar.pdf", width = 8, height = 4)
ggplot(glm, aes(x = feature, y = effect, label = feature)) +
geom_point(size = 5, color = "firebrick1") +
geom_text(size = 5, vjust = 2) + geom_hline(y = 0, linetype = 2) +
theme_bw() + xlab("") + ylab("Effect") + ylim(-1.0, 1.0) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 12, face = "bold", vjust = 1))
dev.off()
names(fit0)
library(rstan)  # R/3.1.1
library(rstan)
glm <- stan_model(file = "./GLM/glm_new.stan", model_name='GLMM')
data0 <- list(N = nrow(mdata), K = length(unique(mdata$AD1)),
Ad = as.numeric(mdata$AD2), KS = KS,
Age = mdata$Age, Sex = as.numeric(mdata$Sex),
Apoe2 = mdata$Apoe2, Apoe4 = mdata$Apoe4)
load("./data/kinship_new.rdt")
KS <- kinship$autosome
data0 <- list(N = nrow(mdata), K = length(unique(mdata$AD1)),
Ad = as.numeric(mdata$AD2), KS = KS,
Age = mdata$Age, Sex = as.numeric(mdata$Sex),
Apoe2 = mdata$Apoe2, Apoe4 = mdata$Apoe4)
data <- list(N = nrow(mdata), K = length(unique(mdata$AD1)),
Ad = as.numeric(mdata$AD2), KS = KS, Age = mdata$Age, Sex = as.numeric(mdata$Sex),
Apoe2 = mdata$Apoe2, Apoe4 = mdata$Apoe4, Snp = rep(0, nrow(mdata)))
fit <- sampling(glm, data = data, warmup = 3e2, iter = 6e2, chains = 3)
x = as.data.frame(fit)
dim(x)
x = x  %>% select(contains(c("Age", "Sex", "Apoe")))
library(dplyr)
x = x  %>% select(contains(c("Age", "Sex", "Apoe")))
x[1:10, 1:5]
x = x  %>% select((c("Age", "Sex", "Apoe")))
x = x %>% select((c("pAge", "pSex", "pApoe2", "pApoe4")))
sample <- as.data.frame(fit) %>% select((c("pAge", "pSex", "pApoe2", "pApoe4")))
sample <- as.data.frame(fit) %>% select(c("pAge", "pSex", "pApoe2", "pApoe4"))
sample <- as.data.frame(fit)[c("pAge", "pSex", "pApoe2", "pApoe4")]
head(sample)
mode <- apply(sample, 2, function(z) { dens <- density(z); dens$x[which.max(dens$y)] })
mode
ci95 <- summary(fit)[c("pAge", "pSex", "pApoe2", "pApoe4"), c("2.5%", "97.5%")]
summary(fit)
library(rstan)
summary(fit)
print(fit)
ci95 <- summary(fit)$summary[c("pAge", "pSex", "pApoe2", "pApoe4"), c("2.5%", "97.5%")]
ci95
mode
names(mode)
var <- gsub("^p", "", names(mode))
var
glm <- data.frame(feature = factor(var, levels = var), mode = mode, se1 = ci95[, 1], se2 = ci95[, 2])
glm
ggplot(glm, aes(x = feature, y = effect, label = feature)) +
geom_point(size = 5, color = "firebrick1") +
geom_errorbar(aes(ymax = se1, ymin = se2), width = 0.2) +
geom_text(size = 5, vjust = 2) + geom_hline(y = 0, linetype = 2) +
theme_bw() + xlab("") + ylab("Effect") + ylim(-1.0, 1.0) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 12, face = "bold", vjust = 1))
ggplot(glm, aes(x = feature, y = mode, label = feature)) +
geom_point(size = 5, color = "firebrick1") +
geom_errorbar(aes(ymax = se1, ymin = se2), width = 0.2) +
geom_text(size = 5, vjust = 2) + geom_hline(y = 0, linetype = 2) +
theme_bw() + xlab("") + ylab("Effect") + ylim(-1.0, 1.0) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 12, face = "bold", vjust = 1))
ggplot(glm, aes(x = feature, y = mode, label = feature)) +
geom_point(size = 5, color = "firebrick1") +
geom_errorbar(aes(ymax = se1, ymin = se2), width = 0.2) +
geom_text(size = 5, vjust = 2) + geom_hline(y = 0, linetype = 2) +
theme_bw() + xlab("") + ylab("Effect") + ylim(-1.2, 1.2) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 12, face = "bold", vjust = 1))
glm
ggplot(glm, aes(x = feature, y = mode, label = feature)) +
geom_point(size = 5, color = "firebrick1") +
geom_errorbar(aes(ymax = se1, ymin = se2), width = 0.2) +
geom_text(size = 5, vjust = 2) + geom_hline(y = 0, linetype = 2) +
theme_bw() + xlab("") + ylab("Effect") + ylim(-1.3, 1.3) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 12, face = "bold", vjust = 1))
pdf("Pdf/covar.pdf", width = 8, height = 4)
ggplot(glm, aes(x = feature, y = mode, label = feature)) +
geom_point(size = 5, color = "firebrick1") +
geom_errorbar(aes(ymax = se1, ymin = se2), width = 0.2) +
geom_text(size = 5, hjust = 2) + geom_hline(y = 0, linetype = 2) +
theme_bw() + xlab("") + ylab("Effect") + ylim(-1.3, 1.3) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 12, face = "bold", vjust = 1))
dev.off()
pdf("Pdf/covar.pdf", width = 8, height = 4)
ggplot(glm, aes(x = feature, y = mode, label = feature)) +
geom_point(size = 5, color = "firebrick1") +
geom_errorbar(aes(ymax = se1, ymin = se2), width = 0.2) +
geom_text(size = 5, hjust = 1) + geom_hline(y = 0, linetype = 2) +
theme_bw() + xlab("") + ylab("Effect") + ylim(-1.3, 1.3) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 12, face = "bold", vjust = 1))
dev.off()
pdf("Pdf/covar.pdf", width = 6, height = 4)
ggplot(glm, aes(x = feature, y = mode, label = feature)) +
geom_point(size = 5, color = "firebrick1") +
geom_errorbar(aes(ymax = se1, ymin = se2), width = 0.2) +
geom_text(size = 5, hjust = 1) + geom_hline(y = 0, linetype = 2) +
theme_bw() + xlab("") + ylab("Effect") + ylim(-1.3, 1.3) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 12, face = "bold", vjust = 1))
dev.off()
pdf("Pdf/covar.pdf", width = 6, height = 4)
ggplot(glm, aes(x = feature, y = mode, label = feature)) +
geom_point(size = 5, color = "firebrick1") +
geom_errorbar(aes(ymax = se1, ymin = se2), width = 0.2) +
geom_text(size = 5, hjust = 2) + geom_hline(y = 0, linetype = 2) +
theme_bw() + xlab("") + ylab("Effect") + ylim(-1.3, 1.3) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 12, vjust = 1))
dev.off()
pdf("Pdf/covar.pdf", width = 6, height = 4)
ggplot(glm, aes(x = feature, y = mode, label = feature)) +
geom_point(size = 5, color = "firebrick1") +
geom_errorbar(aes(ymax = se1, ymin = se2), width = 0.2) +
geom_text(size = 5, hjust = 2) +
geom_hline(y = 0, linetype = 2, size = 1) +
theme_bw() + xlab("") + ylab("Effect") + ylim(-1.3, 1.3) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 12, vjust = 1))
dev.off()
pdf("Pdf/covar.pdf", width = 6, height = 4)
ggplot(glm, aes(x = feature, y = mode, label = feature)) +
geom_point(size = 5, color = "firebrick1") +
geom_errorbar(aes(ymax = se1, ymin = se2), width = 0.2) +
geom_text(size = 5, hjust = 2) +
geom_hline(y = 0, linetype = 2, size = .2) +
theme_bw() + xlab("") + ylab("Effect") + ylim(-1.3, 1.3) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 12, vjust = 1))
dev.off()
pdf("Pdf/covar.pdf", width = 6, height = 4)
ggplot(glm, aes(x = feature, y = mode, label = feature)) +
geom_errorbar(aes(ymax = se1, ymin = se2), width = 0.2) +
geom_point(size = 5, color = "firebrick1") +
geom_text(size = 5, hjust = 2) +
geom_hline(y = 0, linetype = 2, size = .2) +
theme_bw() + xlab("") + ylab("Effect") + ylim(-1.3, 1.3) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 12, vjust = 1))
dev.off()
library(dplyr)
library(mygene)
library(ggplot2)
rm(list = ls())
hpc <- "/data/xwang/ADSP"
github <- "~/Dropbox/GitHub/Adsp"
setwd(github)
load("data/tableList.rdt")
par(mfrow = c(1, 2)); dens <- tableList$lod_diff_dens
plot(dens$SNP, main = "SNP"); plot(dens$IND, main = "IND")
table <- do.call(rbind, tableList$table)
so <- read.delim("data/so.txt", stringsAsFactors = F)
so <- gsub(" ", "", so$SO.term)
cons_table <- table(table$Consequence)
cons <- sapply(so, function(x) sum(cons_table[grep(x, names(cons_table))]))
cons <- cons[! cons == 0]
bar <- barplot(cons, xlim = c(0, max(cons) + 2e3),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 1e3, labels = cons)
op <- par(mar = c(5, 20, 4, 2))
bar <- barplot(cons, xlim = c(0, max(cons) + 2e3),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 1e3, labels = cons)
par(mar = c(5, 20, 4, 2))
bar <- barplot(cons, xlim = c(0, max(cons) + 2e3),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 1e3, labels = cons)
par(mar = c(5, 20, 4, 2))
bar <- barplot(cons, xlim = c(0, max(cons) + 2e3),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 1e3, labels = cons)
library(arm)
library(lme4)
library(rstan)
library(ordinal)
library(emma)
library(QTLRel)
library(lmtest)
library(ggplot2)
library(dplyr)
rm(list = ls())
setwd("~/Dropbox/GitHub/Adsp")
load("data/mdata.rdt")
load("./data/kinship_new.rdt")
load("./diagnosis/one.rdt")
one$geno
x = one$geno
data <- list(N = nrow(mdata), K = length(unique(mdata$AD1)),
Ad = as.numeric(mdata$AD2), KS = kinship$autosome, Age = mdata$Age, Sex = as.numeric(mdata$Sex),
Apoe2 = mdata$Apoe2, Apoe4 = mdata$Apoe4, Snp = one$geno)
glm <- stan_model(file = "./GLM/glm_new.stan", model_name='GLMM')
fit <- optimizing(glm, algorithm = "LBFGS", data = data)
fit$par[c("pAge", "pSex", "pApoe2", "pApoe4")]
fit$par[c("pAge", "pSex", "pSnp", "pApoe2", "pApoe4")]
one$meta
sum(fit$par[paste("logLik[", 1:576, "]", sep = "")])
head(mdata)
glm <- stan_model(file = "./GLM/glm.stan", model_name='GLMM')
data <- list(N = nrow(mdata), K = length(unique(mdata$AD1)),
Ad = as.numeric(mdata$AD2), KS = kinship$autosome, Age = mdata$Age, Sex = as.numeric(mdata$Sex),
Apoe = mdata$APOE, Snp = one$geno)
fit <- optimizing(glm, algorithm = "LBFGS", data = data)
glm
data <- list(N = nrow(mdata), K = length(unique(mdata$AD1)),
Ad = as.numeric(mdata$AD2), KS = kinship$autosome, Age = mdata$Age, Sex = as.numeric(mdata$Sex),
Apoe = mdata$APOE, Snp = one$geno)
fit <- optimizing(glm, algorithm = "LBFGS", data = data)
data
data$Apoe
data <- list(N = nrow(mdata), K = length(unique(mdata$AD1)),
Ad = as.numeric(mdata$AD2), KS = kinship$autosome, Age = mdata$Age, Sex = as.numeric(mdata$Sex),
Apoe = as.numeric(mdata$APOE), Snp = one$geno)
fit <- optimizing(glm, algorithm = "LBFGS", data = data)
fit$par[c("pAge", "pSex", "pSnp", "pApoe2", "pApoe4")]
fit$par[c("pAge", "pSex", "pApoe22", "pApoe23", "pApoe24", "pApoe34")]
fit$par[c("pAge", "pSex", "pSnp", "pApoe22", "pApoe23", "pApoe24", "pApoe34")]
glm <- stan_model(file = "./GLM/glm_new.stan", model_name='GLMM')
data <- list(N = nrow(mdata), K = length(unique(mdata$AD1)),
Ad = as.numeric(mdata$AD2), KS = kinship$autosome, Age = mdata$Age, Sex = as.numeric(mdata$Sex),
Apoe2 = mdata$Apoe2, Apoe4 = mdata$Apoe4, Snp = one$geno)
fit <- optimizing(glm, algorithm = "LBFGS", data = data)
fit$par[c("pAge", "pSex", "pSnp", "pApoe2", "pApoe4")]
sum(fit$par[paste("logLik[", 1:576, "]", sep = "")])
data0 <- mdata[, c("AD1", "AD2", "Sex", "Age", "APOE", "Family.ID")]
lm0 <- lm(formula = AD1 ~ Age + Sex + APOE, data0)
lm0
mdata$Snp <- one$geno
(lm <- lm(formula = AD1 ~ Age + Sex + APOE + Snp, meta))
(lm <- lm(formula = AD1 ~ Age + Sex + APOE + Snp, mdata))
(lm <- lm(formula = AD1 ~ Age + Sex + Apoe2 + Apoe4 + Snp, mdata))
lm
lm()
(lmer <- lmer(formula = AD1 ~ Age + Sex + APOE + (1 | Family.ID), mdata, REML = F)
)
(lmer <- lmer(formula = AD1 ~ Age + Sex + APOE + Snp + (1 | Family.ID), mdata, REML = F))
glm1 <- stan_model(file = "./GLM/glm_new.stan", model_name='GLMM')
data1 <- list(N = nrow(mdata), K = length(unique(mdata$AD1)),
Ad = as.numeric(mdata$AD2), KS = kinship$autosome, Age = mdata$Age, Sex = as.numeric(mdata$Sex),
Apoe2 = mdata$Apoe2, Apoe4 = mdata$Apoe4, Snp = one$geno)
fit1 <- optimizing(glm, algorithm = "LBFGS", data = data)
fit1$par[c("pAge", "pSex", "pSnp", "pApoe2", "pApoe4")]
sum(fit1$par[paste("logLik[", 1:576, "]", sep = "")])
glm2 <- stan_model(file = "./GLM/glm.stan", model_name='GLMM')
data2 <- list(N = nrow(mdata), K = length(unique(mdata$AD1)),
Ad = as.numeric(mdata$AD2), KS = kinship$autosome, Age = mdata$Age, Sex = as.numeric(mdata$Sex),
Apoe = as.numeric(mdata$APOE), Snp = one$geno)
fit2 <- optimizing(glm, algorithm = "LBFGS", data = data)
fit2$par[c("pAge", "pSex", "pSnp", "pApoe22", "pApoe23", "pApoe24", "pApoe34")]
sum(fit2$par[paste("logLik[", 1:576, "]", sep = "")])
fit1 <- optimizing(glm1, algorithm = "LBFGS", data = data)
fit1$par[c("pAge", "pSex", "pSnp", "pApoe2", "pApoe4")]
sum(fit1$par[paste("logLik[", 1:576, "]", sep = "")])
fit2 <- optimizing(glm2, algorithm = "LBFGS", data = data)
fit1 <- optimizing(glm1, algorithm = "LBFGS", data = data1)
fit1$par[c("pAge", "pSex", "pSnp", "pApoe2", "pApoe4")]
sum(fit1$par[paste("logLik[", 1:576, "]", sep = "")])
glm2 <- stan_model(file = "./GLM/glm.stan", model_name='GLMM')
data2 <- list(N = nrow(mdata), K = length(unique(mdata$AD1)),
Ad = as.numeric(mdata$AD2), KS = kinship$autosome, Age = mdata$Age, Sex = as.numeric(mdata$Sex),
Apoe = as.numeric(mdata$APOE), Snp = one$geno)
fit2 <- optimizing(glm2, algorithm = "LBFGS", data = data2)
fit2$par[c("pAge", "pSex", "pSnp", "pApoe22", "pApoe23", "pApoe24", "pApoe34")]
sum(fit2$par[paste("logLik[", 1:576, "]", sep = "")])
?quantile
fit1$par[c("pAge", "pSex", "pSnp", "pApoe2", "pApoe4")]
fit2$par[c("pAge", "pSex", "pSnp", "pApoe22", "pApoe23", "pApoe24", "pApoe34")]
fit1$par[c("pAge", "pSex", "pSnp", "pApoe2", "pApoe4")]
sum(fit1$par[c("pAge", "pSex", "pSnp", "pApoe2", "pApoe4")])
sum(fit2$par[c("pAge", "pSex", "pSnp", "pApoe22", "pApoe23", "pApoe24", "pApoe34")])
one$meta
libraray(xlsx)
library(xlsx)
setwd("~/Dropbox/GitHub/SP2015/")
dir()
Neuron <- read.xlsx("Astrocytes_vs_neurons.HOMER_sorted_final_header_negative.xls")
?xlsx
Neuron <- read.xlsx("Astrocytes_vs_neurons.HOMER_sorted_final_header_negative.xls", 1, stringsAsFactors = F)
dir()
Neuron <- read.xlsx("table_ADSP.xlsx", 1, stringsAsFactors = F)
Neuron <- read.xlsx("Astrocytes_vs_neurons.HOMER_sorted_final_header_negative.xlsx", 1, stringsAsFactors = F)
ADSP <- read.xlsx("table_ADSP.xlsx", 1, stringsAsFactors = F)
Neuron <- read.xlsx("Astrocytes_vs_neurons.HOMER_sorted_final_header_negative.xlsx", 1, stringsAsFactors = F)
Astrocyte <- read.xlsx("Astrocytes_vs_neurons.HOMER_sorted_final_header_positive.xl", 1, stringsAsFactors = F)
adsp <- read.xlsx("table_ADSP.xlsx", 1, stringsAsFactors = F)
neuron <- read.xlsx("Astrocytes_vs_neurons.HOMER_sorted_final_header_negative.xlsx", 1, stringsAsFactors = F)
